<!-- <lang-toggle>
    <button>
        <span class="sr-only">Fr</span>
        <span class="icon fr">Fr</span>
        <span class="icon en">En</span>
    </button>
</lang-toggle> -->


<!-- <style>
	button {
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0;
		background-color: var(--gray-999);
		box-shadow: inset 0 0 0 1px var(--accent-overlay);
		cursor: pointer;
	}

	.icon {
		z-index: 1;
		position: relative;
		display: flex;
		padding: 0.5rem;
		width: 2rem;
		height: 2rem;
		font-size: 0.9rem;
		color: var(--accent-overlay);
	}

    .icon.en {
        margin-left: -0.1;
    }

	.icon.fr::before {
		content: '';
		z-index: -1;
		position: absolute;
		inset: 0;
		background-color: var(--accent-regular);
		border-radius: 999rem;
	}

	:global(.lang-en) .icon.fr::before {
		transform: translateX(100%);
	}

	:global(.lang-en) .icon.en,
	:global(html:not(.lang-en)) .icon.fr,
	button[aria-pressed='false'] .icon.fr {
		color: var(--accent-text-over);
	}

	@media (prefers-reduced-motion: no-preference) {
		.icon,
		.icon.fr::before {
			transition:
				transform var(--theme-transition),
				color var(--theme-transition);
		}
	}

	@media (forced-colors: active) {
		.icon.fr::before {
			background-color: SelectedItem;
		}
	}
</style> -->

<!-- <script>
import i18n from "../i18n";

class LanguageToggle extends HTMLElement {
	constructor() {
		super();

		const button = this.querySelector('button')!;

		const setLanguage = (isEn: boolean) => {
			document.documentElement.classList[isEn ? 'add' : 'remove']('lang-en');
			button.setAttribute('aria-pressed', String(isEn));

			i18n
			.changeLanguage(isEn ? 'en' : 'fr')

			i18n.reloadResources()
			// ,console.log(i18n.language)
			// console.log("la langue est en : " ,isEn ? "anglais" : "francais")

			
		};

		button.addEventListener('click', () => {
			const isEnglish = !this.isEn();
			setLanguage(isEnglish);
		});

		setLanguage(this.isEn());
		// console.log(i18n.language)
	}

	isEn() {
		return document.documentElement.classList.contains('lang-en');
	}

}
customElements.define('lang-toggle', LanguageToggle);
</script>	 -->

<!-- <script>
	import i18next from "i18next";
	
	class LanguageToggle extends HTMLElement {
		constructor() {
			super();
	
			const button = this.querySelector('button')!;
	
			const setLanguage = (isEn: boolean) => {
				document.documentElement.classList[isEn ? 'add' : 'remove']('lang-en');
				button.setAttribute('aria-pressed', String(isEn));
	
				i18next
				.changeLanguage(isEn ? 'en' : 'fr')
	
				i18next.reloadResources()
				// ,console.log(i18n.language)
				// console.log("la langue est en : " ,isEn ? "anglais" : "francais")
	
				
			};
	
			button.addEventListener('click', () => {
				const isEnglish = !this.isEn();
				setLanguage(isEnglish);
			});
	
			setLanguage(this.isEn());
			// console.log(i18n.language)
		}
	
		isEn() {
			return document.documentElement.classList.contains('lang-en');
		}
	
	}
	customElements.define('lang-toggle', LanguageToggle);
	</script>	 -->